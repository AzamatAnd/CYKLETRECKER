name: ⚡ Fast Android Build & Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  # Fast build for PR checks
  fast-build:
    name: ⚡ Fast Build & Test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: 🔧 Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: 🚀 Fast build
        run: |
          ./gradlew assembleDebug --parallel --build-cache --daemon

      - name: 🧪 Run tests
        run: |
          ./gradlew testDebugUnitTest --parallel --build-cache

      - name: 📊 Generate test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: fast-build-test-results
          path: |
            app/build/test-results/**/*.xml
            app/build/reports/**/*.html
          retention-days: 7

      - name: 📦 Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: fast-build-apk
          path: app/build/outputs/apk/debug/*.apk
          retention-days: 7

  # Comprehensive build for main branch
  comprehensive-build:
    name: 🏗️ Comprehensive Build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: 🔧 Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: 🔍 Run comprehensive linting
        run: |
          ./gradlew lintDebug lintRelease --continue --parallel --build-cache

      - name: 🧪 Run all tests
        run: |
          ./gradlew testDebugUnitTest testReleaseUnitTest --parallel --build-cache

      - name: 📊 Generate test report and coverage
        run: |
          ./gradlew jacocoTestReport --parallel --build-cache

      - name: 🏗️ Build all variants
        run: |
          ./gradlew assembleDebug assembleRelease --parallel --build-cache

      - name: 📏 Check APK sizes
        run: |
          echo "=== APK Size Analysis ===" >> $GITHUB_STEP_SUMMARY
          find app/build/outputs/apk -name "*.apk" -exec ls -lh {} \; >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

      - name:  Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: ultra-modern-debug-apk
          path: |
            app/build/outputs/apk/debug/*.apk
            app/build/reports/tests/
          retention-days: 90

      - name: 📦 Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: ultra-modern-release-apk
          path: |
            app/build/outputs/apk/release/*.apk
            app/build/outputs/bundle/release/*.aab
          retention-days: 90

      - name: 📊 Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage-report
          path: app/build/reports/jacoco/
          retention-days: 30

  # Security scanning
  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: comprehensive-build

    steps:
      - name: 📥 Download APK
        uses: actions/download-artifact@v4
        with:
          name: ultra-modern-release-apk
          path: ./security-scan/

      - name: 🔒 Run security scan (placeholder)
        run: |
          echo "🔒 Security scanning would run here"
          echo "Checking for vulnerabilities, malware, etc."
          echo "✅ Security scan completed (simulated)"
