name: Android CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: 34.0.0

      - name: Set up environment variables
        run: |
          echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build APKs (clean, no cache)
        run: |
          ./gradlew --stop || true
          rm -rf ~/.gradle/caches ~/.gradle/wrapper || true
          ./gradlew clean assembleDebug -x test --no-build-cache

      - name: Diagnose merged resources
        run: |
          echo "Merged values referencing Theme.Material3.DayNight:"
          find app/build -path "*/merged_res/*/values/values.xml" -type f -print -exec grep -n "Theme.Material3.DayNight" {} \; || true
          echo "Dump last values.xml files:"
          LAST_FILES=$(find app/build -path "*/merged_res/*/values/values.xml" -type f | tail -n 5)
          for f in $LAST_FILES; do echo "===== $f ====="; sed -n '1,1200p' "$f" | tail -n 200; done || true

      - name: Build release APK
        run: ./gradlew assembleRelease -x test --no-build-cache

      - name: Prepare apk folder
        run: |
          mkdir -p apk
          cp app/build/outputs/apk/debug/*.apk apk/app-debug.apk || true
          cp app/build/outputs/apk/release/*.apk apk/app-release.apk || true

      - name: Upload debug APK (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: ignore

      - name: Upload release APK (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: app/build/outputs/apk/release/*.apk
          if-no-files-found: ignore

      # APKs are uploaded as artifacts, no need to commit to repo

