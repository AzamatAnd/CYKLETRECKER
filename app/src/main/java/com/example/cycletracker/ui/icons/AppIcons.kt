<<<<<<< HEAD
package com.example.cycletracker.ui.icons

import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.*
import androidx.compose.ui.graphics.vector.ImageVector

object AppIcons {
    // Navigation icons
    val Home = Icons.Filled.Home
    val Calendar = Icons.Filled.CalendarToday
    val History = Icons.Filled.History
    val Statistics = Icons.Filled.Analytics
    val Settings = Icons.Filled.Settings
    
    // Cycle related icons
    val Cycle = Icons.Filled.Repeat
    val Period = Icons.Filled.Favorite
    val Prediction = Icons.Filled.Schedule
    val Ovulation = Icons.Filled.Star
    
    // Symptom icons
    val Pain = Icons.Filled.LocalHospital
    val Mood = Icons.Filled.Mood
    val Sleep = Icons.Filled.Bedtime
    val Weight = Icons.Filled.MonitorWeight
    val Medication = Icons.Filled.Medication
    
    // Action icons
    val Add = Icons.Filled.Add
    val Edit = Icons.Filled.Edit
    val Delete = Icons.Filled.Delete
    val Save = Icons.Filled.Save
    val Share = Icons.Filled.Share
    val Download = Icons.Filled.Download
    val Upload = Icons.Filled.Upload
    
    // Status icons
    val Check = Icons.Filled.Check
    val Warning = Icons.Filled.Warning
    val Info = Icons.Filled.Info
    val Error = Icons.Filled.Error
    val Success = Icons.Filled.CheckCircle
    
    // UI icons
    val ArrowBack = Icons.Filled.ArrowBack
    val ArrowForward = Icons.Filled.ArrowForward
    val ExpandMore = Icons.Filled.ExpandMore
    val ExpandLess = Icons.Filled.ExpandLess
    val Close = Icons.Filled.Close
    val Menu = Icons.Filled.Menu
    val MoreVert = Icons.Filled.MoreVert
    val MoreHoriz = Icons.Filled.MoreHoriz
}

// –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∏–∫–æ–Ω–∫–∏ CycleTracker
object CycleIcons {
    // –§–∞–∑—ã —Ü–∏–∫–ª–∞
    val Follicular = R.drawable.ic_cycle_follicular
    val Ovulation = R.drawable.ic_cycle_ovulation
    val Luteal = R.drawable.ic_cycle_luteal
    val Period = R.drawable.ic_cycle_period
    
    // –°–∏–º–ø—Ç–æ–º—ã
    val Pain = R.drawable.ic_symptom_pain
    val Headache = R.drawable.ic_symptom_headache
    val Fatigue = R.drawable.ic_symptom_fatigue
    val Mood = R.drawable.ic_symptom_mood
    val Bloating = R.drawable.ic_symptom_bloating
    
    // –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ
    val Mood1 = R.drawable.ic_mood_1
    val Mood5 = R.drawable.ic_mood_5
    val Mood10 = R.drawable.ic_mood_10
    
    // UI —ç–ª–µ–º–µ–Ω—Ç—ã
    val Logo = R.drawable.ic_cycle_tracker_logo
    val Chart = R.drawable.ic_statistics_chart
    val Heart = R.drawable.ic_health_heart
    
    // –°—Ç–∞—Ç—É—Å—ã
    val Success = R.drawable.ic_status_success
    val Warning = R.drawable.ic_status_warning
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–æ–∫ –ø–æ —Ç–∏–ø—É
fun getCyclePhaseIcon(phase: String): Int {
    return when (phase.lowercase()) {
        "—Ñ–æ–ª–ª–∏–∫—É–ª—è—Ä–Ω–∞—è" -> CycleIcons.Follicular
        "–æ–≤—É–ª—è—Ü–∏—è" -> CycleIcons.Ovulation
        "–ª—é—Ç–µ–∏–Ω–æ–≤–∞—è" -> CycleIcons.Luteal
        "–º–µ—Å—è—á–Ω—ã–µ", "–ø–µ—Ä–∏–æ–¥" -> CycleIcons.Period
        else -> CycleIcons.Follicular
    }
}

fun getSymptomIcon(symptomType: String): Int {
    return when (symptomType.lowercase()) {
        "–±–æ–ª—å –≤ –∂–∏–≤–æ—Ç–µ", "—Å–ø–∞–∑–º—ã" -> CycleIcons.Pain
        "–≥–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å" -> CycleIcons.Headache
        "—É—Å—Ç–∞–ª–æ—Å—Ç—å" -> CycleIcons.Fatigue
        "–ø–µ—Ä–µ–ø–∞–¥—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è" -> CycleIcons.Mood
        "–≤–∑–¥—É—Ç–∏–µ" -> CycleIcons.Bloating
        else -> CycleIcons.Pain
    }
}

fun getMoodIcon(moodLevel: Int): Int {
    return when (moodLevel) {
        in 1..3 -> CycleIcons.Mood1
        in 4..6 -> CycleIcons.Mood5
        in 7..10 -> CycleIcons.Mood10
        else -> CycleIcons.Mood5
    }
}

object AppEmojis {
    // Cycle phases
    const val PERIOD = "ü©∏"
    const val PREDICTED = "üìÖ"
    const val FOLLICULAR = "üå∏"
    const val LUTEAL = "üåô"
    const val OVULATION = "‚ú®"
    
    // Symptoms
    const val PAIN = "üò£"
    const val HEADACHE = "ü§ï"
    const val FATIGUE = "üò¥"
    const val MOOD_SWINGS = "üò§"
    const val BLOATING = "üí®"
    const val NAUSEA = "ü§¢"
    const val BREAST_TENDERNESS = "üíï"
    const val CRAMPS = "‚ö°"
    const val OTHER = "üìù"
    
    // Mood levels
    const val MOOD_1 = "üò¢" // Very sad
    const val MOOD_2 = "üòî" // Sad
    const val MOOD_3 = "üòï" // Slightly sad
    const val MOOD_4 = "üòê" // Neutral
    const val MOOD_5 = "üôÇ" // Slightly happy
    const val MOOD_6 = "üòä" // Happy
    const val MOOD_7 = "üòÑ" // Very happy
    const val MOOD_8 = "ü§©" // Excited
    const val MOOD_9 = "ü•≥" // Ecstatic
    const val MOOD_10 = "üéâ" // Euphoric
    
    // Sleep quality
    const val SLEEP_1 = "üòµ" // Terrible
    const val SLEEP_2 = "üò¥" // Poor
    const val SLEEP_3 = "üòë" // Fair
    const val SLEEP_4 = "üòå" // Good
    const val SLEEP_5 = "üòä" // Excellent
    
    // Statistics
    const val CHART = "üìä"
    const val TREND_UP = "üìà"
    const val TREND_DOWN = "üìâ"
    const val TREND_STABLE = "‚û°Ô∏è"
    const val CALENDAR = "üìÖ"
    const val CLOCK = "‚è∞"
    const val TARGET = "üéØ"
    const val TROPHY = "üèÜ"
    
    // Actions
    const val ADD = "‚ûï"
    const val EDIT = "‚úèÔ∏è"
    const val DELETE = "üóëÔ∏è"
    const val SAVE = "üíæ"
    const val SHARE = "üì§"
    const val DOWNLOAD = "‚¨áÔ∏è"
    const val UPLOAD = "‚¨ÜÔ∏è"
    const val REFRESH = "üîÑ"
    const val SEARCH = "üîç"
    const val FILTER = "üîΩ"
    
    // Status
    const val SUCCESS = "‚úÖ"
    const val WARNING = "‚ö†Ô∏è"
    const val ERROR = "‚ùå"
    const val INFO = "‚ÑπÔ∏è"
    const val QUESTION = "‚ùì"
    const val LIGHTBULB = "üí°"
    
    // Weather/Environment
    const val SUNNY = "‚òÄÔ∏è"
    const val CLOUDY = "‚òÅÔ∏è"
    const val RAINY = "üåßÔ∏è"
    const val SNOWY = "‚ùÑÔ∏è"
    const val STORMY = "‚õàÔ∏è"
    
    // Health
    const val HEART = "‚ù§Ô∏è"
    const val LUNGS = "ü´Å"
    const val BRAIN = "üß†"
    const val MUSCLE = "üí™"
    const val BONE = "ü¶¥"
    const val PILL = "üíä"
    const val SYRINGE = "üíâ"
    const val THERMOMETER = "üå°Ô∏è"
    
    // Time
    const val MORNING = "üåÖ"
    const val AFTERNOON = "‚òÄÔ∏è"
    const val EVENING = "üåÜ"
    const val NIGHT = "üåô"
    const val DAWN = "üåÑ"
    const val DUSK = "üåá"
    
    fun getMoodEmoji(level: Int): String {
        return when (level) {
            1 -> MOOD_1
            2 -> MOOD_2
            3 -> MOOD_3
            4 -> MOOD_4
            5 -> MOOD_5
            6 -> MOOD_6
            7 -> MOOD_7
            8 -> MOOD_8
            9 -> MOOD_9
            10 -> MOOD_10
            else -> MOOD_5
        }
    }
    
    fun getSleepEmoji(quality: Int): String {
        return when (quality) {
            1 -> SLEEP_1
            2 -> SLEEP_2
            3 -> SLEEP_3
            4 -> SLEEP_4
            5 -> SLEEP_5
            else -> SLEEP_3
        }
    }
    
    fun getSymptomEmoji(type: String): String {
        return when (type.lowercase()) {
            "–±–æ–ª—å –≤ –∂–∏–≤–æ—Ç–µ" -> PAIN
            "–≥–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å" -> HEADACHE
            "—É—Å—Ç–∞–ª–æ—Å—Ç—å" -> FATIGUE
            "–ø–µ—Ä–µ–ø–∞–¥—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è" -> MOOD_SWINGS
            "–≤–∑–¥—É—Ç–∏–µ" -> BLOATING
            "—Ç–æ—à–Ω–æ—Ç–∞" -> NAUSEA
            "–±–æ–ª–µ–∑–Ω–µ–Ω–Ω–æ—Å—Ç—å –≥—Ä—É–¥–∏" -> BREAST_TENDERNESS
            "—Å–ø–∞–∑–º—ã" -> CRAMPS
            else -> OTHER
        }
    }
}
=======
package com.example.cycletracker.ui.icons

import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.*
import androidx.compose.ui.graphics.vector.ImageVector

object AppIcons {
    // Navigation icons
    val Home = Icons.Filled.Home
    val Calendar = Icons.Filled.CalendarToday
    val History = Icons.Filled.History
    val Statistics = Icons.Filled.Analytics
    val Settings = Icons.Filled.Settings
    
    // Cycle related icons
    val Cycle = Icons.Filled.Repeat
    val Period = Icons.Filled.Favorite
    val Prediction = Icons.Filled.Schedule
    val Ovulation = Icons.Filled.Star
    
    // Symptom icons
    val Pain = Icons.Filled.LocalHospital
    val Mood = Icons.Filled.Mood
    val Sleep = Icons.Filled.Bedtime
    val Weight = Icons.Filled.MonitorWeight
    val Medication = Icons.Filled.Medication
    
    // Action icons
    val Add = Icons.Filled.Add
    val Edit = Icons.Filled.Edit
    val Delete = Icons.Filled.Delete
    val Save = Icons.Filled.Save
    val Share = Icons.Filled.Share
    val Download = Icons.Filled.Download
    val Upload = Icons.Filled.Upload
    
    // Status icons
    val Check = Icons.Filled.Check
    val Warning = Icons.Filled.Warning
    val Info = Icons.Filled.Info
    val Error = Icons.Filled.Error
    val Success = Icons.Filled.CheckCircle
    
    // UI icons
    val ArrowBack = Icons.Filled.ArrowBack
    val ArrowForward = Icons.Filled.ArrowForward
    val ExpandMore = Icons.Filled.ExpandMore
    val ExpandLess = Icons.Filled.ExpandLess
    val Close = Icons.Filled.Close
    val Menu = Icons.Filled.Menu
    val MoreVert = Icons.Filled.MoreVert
    val MoreHoriz = Icons.Filled.MoreHoriz
}

// –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∏–∫–æ–Ω–∫–∏ CycleTracker
object CycleIcons {
    // –§–∞–∑—ã —Ü–∏–∫–ª–∞
    val Follicular = R.drawable.ic_cycle_follicular
    val Ovulation = R.drawable.ic_cycle_ovulation
    val Luteal = R.drawable.ic_cycle_luteal
    val Period = R.drawable.ic_cycle_period
    
    // –°–∏–º–ø—Ç–æ–º—ã
    val Pain = R.drawable.ic_symptom_pain
    val Headache = R.drawable.ic_symptom_headache
    val Fatigue = R.drawable.ic_symptom_fatigue
    val Mood = R.drawable.ic_symptom_mood
    val Bloating = R.drawable.ic_symptom_bloating
    
    // –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ
    val Mood1 = R.drawable.ic_mood_1
    val Mood5 = R.drawable.ic_mood_5
    val Mood10 = R.drawable.ic_mood_10
    
    // UI —ç–ª–µ–º–µ–Ω—Ç—ã
    val Logo = R.drawable.ic_cycle_tracker_logo
    val Chart = R.drawable.ic_statistics_chart
    val Heart = R.drawable.ic_health_heart
    
    // –°—Ç–∞—Ç—É—Å—ã
    val Success = R.drawable.ic_status_success
    val Warning = R.drawable.ic_status_warning
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–æ–∫ –ø–æ —Ç–∏–ø—É
fun getCyclePhaseIcon(phase: String): Int {
    return when (phase.lowercase()) {
        "—Ñ–æ–ª–ª–∏–∫—É–ª—è—Ä–Ω–∞—è" -> CycleIcons.Follicular
        "–æ–≤—É–ª—è—Ü–∏—è" -> CycleIcons.Ovulation
        "–ª—é—Ç–µ–∏–Ω–æ–≤–∞—è" -> CycleIcons.Luteal
        "–º–µ—Å—è—á–Ω—ã–µ", "–ø–µ—Ä–∏–æ–¥" -> CycleIcons.Period
        else -> CycleIcons.Follicular
    }
}

fun getSymptomIcon(symptomType: String): Int {
    return when (symptomType.lowercase()) {
        "–±–æ–ª—å –≤ –∂–∏–≤–æ—Ç–µ", "—Å–ø–∞–∑–º—ã" -> CycleIcons.Pain
        "–≥–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å" -> CycleIcons.Headache
        "—É—Å—Ç–∞–ª–æ—Å—Ç—å" -> CycleIcons.Fatigue
        "–ø–µ—Ä–µ–ø–∞–¥—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è" -> CycleIcons.Mood
        "–≤–∑–¥—É—Ç–∏–µ" -> CycleIcons.Bloating
        else -> CycleIcons.Pain
    }
}

fun getMoodIcon(moodLevel: Int): Int {
    return when (moodLevel) {
        in 1..3 -> CycleIcons.Mood1
        in 4..6 -> CycleIcons.Mood5
        in 7..10 -> CycleIcons.Mood10
        else -> CycleIcons.Mood5
    }
}

object AppEmojis {
    // Cycle phases
    const val PERIOD = "ü©∏"
    const val PREDICTED = "üìÖ"
    const val FOLLICULAR = "üå∏"
    const val LUTEAL = "üåô"
    const val OVULATION = "‚ú®"
    
    // Symptoms
    const val PAIN = "üò£"
    const val HEADACHE = "ü§ï"
    const val FATIGUE = "üò¥"
    const val MOOD_SWINGS = "üò§"
    const val BLOATING = "üí®"
    const val NAUSEA = "ü§¢"
    const val BREAST_TENDERNESS = "üíï"
    const val CRAMPS = "‚ö°"
    const val OTHER = "üìù"
    
    // Mood levels
    const val MOOD_1 = "üò¢" // Very sad
    const val MOOD_2 = "üòî" // Sad
    const val MOOD_3 = "üòï" // Slightly sad
    const val MOOD_4 = "üòê" // Neutral
    const val MOOD_5 = "üôÇ" // Slightly happy
    const val MOOD_6 = "üòä" // Happy
    const val MOOD_7 = "üòÑ" // Very happy
    const val MOOD_8 = "ü§©" // Excited
    const val MOOD_9 = "ü•≥" // Ecstatic
    const val MOOD_10 = "üéâ" // Euphoric
    
    // Sleep quality
    const val SLEEP_1 = "üòµ" // Terrible
    const val SLEEP_2 = "üò¥" // Poor
    const val SLEEP_3 = "üòë" // Fair
    const val SLEEP_4 = "üòå" // Good
    const val SLEEP_5 = "üòä" // Excellent
    
    // Statistics
    const val CHART = "üìä"
    const val TREND_UP = "üìà"
    const val TREND_DOWN = "üìâ"
    const val TREND_STABLE = "‚û°Ô∏è"
    const val CALENDAR = "üìÖ"
    const val CLOCK = "‚è∞"
    const val TARGET = "üéØ"
    const val TROPHY = "üèÜ"
    
    // Actions
    const val ADD = "‚ûï"
    const val EDIT = "‚úèÔ∏è"
    const val DELETE = "üóëÔ∏è"
    const val SAVE = "üíæ"
    const val SHARE = "üì§"
    const val DOWNLOAD = "‚¨áÔ∏è"
    const val UPLOAD = "‚¨ÜÔ∏è"
    const val REFRESH = "üîÑ"
    const val SEARCH = "üîç"
    const val FILTER = "üîΩ"
    
    // Status
    const val SUCCESS = "‚úÖ"
    const val WARNING = "‚ö†Ô∏è"
    const val ERROR = "‚ùå"
    const val INFO = "‚ÑπÔ∏è"
    const val QUESTION = "‚ùì"
    const val LIGHTBULB = "üí°"
    
    // Weather/Environment
    const val SUNNY = "‚òÄÔ∏è"
    const val CLOUDY = "‚òÅÔ∏è"
    const val RAINY = "üåßÔ∏è"
    const val SNOWY = "‚ùÑÔ∏è"
    const val STORMY = "‚õàÔ∏è"
    
    // Health
    const val HEART = "‚ù§Ô∏è"
    const val LUNGS = "ü´Å"
    const val BRAIN = "üß†"
    const val MUSCLE = "üí™"
    const val BONE = "ü¶¥"
    const val PILL = "üíä"
    const val SYRINGE = "üíâ"
    const val THERMOMETER = "üå°Ô∏è"
    
    // Time
    const val MORNING = "üåÖ"
    const val AFTERNOON = "‚òÄÔ∏è"
    const val EVENING = "üåÜ"
    const val NIGHT = "üåô"
    const val DAWN = "üåÑ"
    const val DUSK = "üåá"
    
    fun getMoodEmoji(level: Int): String {
        return when (level) {
            1 -> MOOD_1
            2 -> MOOD_2
            3 -> MOOD_3
            4 -> MOOD_4
            5 -> MOOD_5
            6 -> MOOD_6
            7 -> MOOD_7
            8 -> MOOD_8
            9 -> MOOD_9
            10 -> MOOD_10
            else -> MOOD_5
        }
    }
    
    fun getSleepEmoji(quality: Int): String {
        return when (quality) {
            1 -> SLEEP_1
            2 -> SLEEP_2
            3 -> SLEEP_3
            4 -> SLEEP_4
            5 -> SLEEP_5
            else -> SLEEP_3
        }
    }
    
    fun getSymptomEmoji(type: String): String {
        return when (type.lowercase()) {
            "–±–æ–ª—å –≤ –∂–∏–≤–æ—Ç–µ" -> PAIN
            "–≥–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å" -> HEADACHE
            "—É—Å—Ç–∞–ª–æ—Å—Ç—å" -> FATIGUE
            "–ø–µ—Ä–µ–ø–∞–¥—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è" -> MOOD_SWINGS
            "–≤–∑–¥—É—Ç–∏–µ" -> BLOATING
            "—Ç–æ—à–Ω–æ—Ç–∞" -> NAUSEA
            "–±–æ–ª–µ–∑–Ω–µ–Ω–Ω–æ—Å—Ç—å –≥—Ä—É–¥–∏" -> BREAST_TENDERNESS
            "—Å–ø–∞–∑–º—ã" -> CRAMPS
            else -> OTHER
        }
    }
}
>>>>>>> 7eb7955987a0da95e1b119ccbbfc2bcdc4522c76
